@page "/houses"
@attribute [Authorize]

@inject AuthenticationStateProvider authenticationStateProvider
@inject IFamilyService familyService

<PageTitle>Houses</PageTitle>

@if (family is not null)
{
    <div class="page">
        <header>
            <h1>@family.Name</h1>
        </header>
        <main>
            <HouseCreate Created="HouseCreated" FamilyId="@family.Id" />
            @foreach (var house in family.Houses)
            {
                <ActionCard Href="@("/houses/" + house.Id)">
                    <Image>
                        <svg xmlns="http://www.w3.org/2000/svg" width="680.764" height="528.354" viewBox="0 0 180.119 139.794">
                            <g transform="translate(-13.59 -66.639)" paint-order="fill markers stroke">
                                <path fill="#d0d0d0" d="M13.591 66.639H193.71v139.794H13.591z" />
                                <path d="m118.507 133.514-34.249 34.249-15.968-15.968-41.938 41.937H178.726z" opacity=".675" fill="#fff" />
                                <circle cx="58.217" cy="108.555" r="11.773" opacity=".675" fill="#fff" />
                                <path fill="none" d="M26.111 77.634h152.614v116.099H26.111z" />
                            </g>
                        </svg>
                    </Image>
                    <ChildContent>
                        <span class="label">Street</span>
                        <p>@house.Street @house.Number</p>
                        <span class="label">City</span>
                        <p>@house.City</p>
                    </ChildContent>
                </ActionCard>
            }
        </main>
    </div>
}

@code {

    Family? family;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        family = await familyService.GetFamilyAndHouses(authState.User.GetId()!);
    }

    private void HouseCreated(House house)
    {
        family?.Houses?.Add(house);
    }
}

@page
@model DetailsModel
@{
    ViewData["Title"] = $"Housedetails";
}

<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ViewModel.Street)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ViewModel.Street)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ViewModel.Number)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ViewModel.Number)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ViewModel.PostalCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ViewModel.PostalCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ViewModel.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ViewModel.City)
        </dd>
    </dl>
</div>

@if (Model.ViewModel.MeterReadings != null)
{
    <hr />
    <div class="meterreadings-container">
        <h3>Meter Readings</h3>
        <ul class="list-group">
            @if (Model.ViewModel.MeterReadings.Any())
            {
                foreach (var reading in Model.ViewModel.MeterReadings)
                {
                    <li class="list-group-item list-group-item-action">
                        @reading.ReadingType
                    </li>
                }
            }
            else
            {
                <li class="list-group-item">No Meterreadings recorded</li>
            }
        </ul>
    </div>
}

<div>
    <a asp-page="/Index">Back</a>
</div>
